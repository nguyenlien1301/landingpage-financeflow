// laptop lớn, screen <= 1440px ( tuỳ theo kích thước thiết bị)
@mixin lg {
    @media screen and (max-width: 1440px) {
        @content;
    }
}
// laptop nhỏ or tablet lớn < 1200px
@mixin md {
    @media screen and (max-width: 1199.98px) {
        @content;
    }
}
// tablet vừa screen <= 992px 
@mixin sm {
    @media screen and (max-width: 991.98px) {
        @content;
    }
}
// max-width : 100%;
// tablet nhỏ or iphone quay ngang screen < 768px;
@mixin xs {
    @media screen and (max-width: 767.98px) {
        @content;
    }
}
//phone lớn screen < 576px
@mixin xxs {
    @media screen and (max-width: 575.98px) {
        @content;
    }
}
//phone nhỏ screen < 376px ( tuỳ yêu cầu )
@mixin xxxs {
    @media screen and (max-width: 375.98px) {
        @content;
    }
}
//Landscape code cho màn hình quay ngang
@mixin landscape {
    @media screen and (orientation: landscape) {
        @content;
    }
}
// media max min
@mixin maxW($args) {
    @media (max-width: $args) {
        @content;
    }
}
@mixin minW($args) {
    @media (min-width: $args) {
        @content;
    }
}
@mixin minH($args) {
    @media (min-height: $args) {
        @content;
    }
}
@mixin maxH($args) {
    @media (max-height: $args) {
        @content;
    }
}
// css mixin animation
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @-moz-keyframes #{$animation-name} {
        @content;
    }

    @-ms-keyframes #{$animation-name} {
        @content;
    }

    @-o-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}
// khi @include chỉ cần truyền vào 1 biến thì tất cả sẽ nhận value của biến đó;
@mixin animation($str) {
    animation: #{$str};
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
}

@mixin animation-delay($str) {
    animation-delay: #{$str};
    -webkit-animation-delay: #{$str};
    -moz-animation-delay: #{$str};
    -ms-animation-delay: #{$str};
    -o-animation-delay: #{$str};
}
@mixin transform($args) {
    transform: $args;
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
}
@mixin transform-origin($args) {
    transform-origin: $args;
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
}
@mixin transition-delay($args) {
    transition-delay: $args;
    -webkit-transition-delay: $args;
    -moz-transition-delay: $args;
    -ms-transition-delay: $args;
    -o-transition-delay: $args;
}
@mixin transition($args...) {
    transition: $args;
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transtion: $args;
    -o-transition: $args;
}
// text
@mixin text($font-family, $font-size, $line-height, $color, $letter-spacing, $text-transform: none) {
    font-family: $font-family;
    font-size: $font-size;
    line-height: $line-height;
    color: $color;
    text-transform: $text-transform;
    letter-spacing: $letter-spacing;
}
// midle obj
@mixin middle($flex: false) {
    @if $flex ==false {
        top: 50%;
        left: 50%;
        @include transform(translate(-50%, -50%));
        position: absolute;
    }
    @else {
        display: flex;
        align-items: center;
        justify-content: center;
    }
}

@mixin flexbetween {
    display: flex;
    align-items: center;
    justify-content: space-between;
}


//middle img
@mixin midleImg {
    width: 100%;
    height: 101%;
    object-fit: cover;
    position: absolute;
    @include middle;
}
@mixin img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
// full screen (header)
@mixin fullScreen($fixed: false) {
    width: 100%;
    top: 0;
    left: 0;
    @if $fixed {
        position: fixed;
    }
    @else {
        position: absolute;
    }
}
// visible
@mixin visible($param: 1) {
    @if $param ==1 {
        opacity: 1;
        visibility: visible;
    }
    @else {
        opacity: 0;
        visibility: hidden;
    }
}
@mixin bdRadius($radius) {
    border-radius: $radius;
    background-clip: padding-box;
}
// size div
@mixin size($width, $height: $width, $circle: false) {
    width: $width;
    height: $height;
    @if $circle {
        border-radius: 100%;
    }
}
// overflow text dots
@mixin overtext($lineClamp: 2) {
    display: -webkit-box;
    overflow: hidden;
    -webkit-line-clamp: $lineClamp; // số dòng 
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
}
// custom scroll bar
@mixin customScroll($width: 5px, $bgTrack: #ddd, $bgThumb: #121212) {
    &::-webkit-scrollbar {
        width: $width;
    }
    &::-webkit-scrollbar-track {
        background-color: transparent;
    }
    &::-webkit-scrollbar-thumb {
        background-color: $bgThumb;
    }
}
